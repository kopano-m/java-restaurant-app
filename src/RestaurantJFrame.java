
import java.util.Scanner;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Owner
 */
public class RestaurantJFrame extends javax.swing.JFrame
{
//    Scanner         scan  = new Scanner(System.in);
    Queue          qList  = new Queue();
    LinkedList     rList  = new LinkedList();
    UserInfo       uInfo  = new UserInfo(null, null);
    ListIterator iterator = rList.listIterator();
    ListIterator    queue = qList.listIterator();

    /**
     * Creates new form RestaurantJFrame
     */
    public RestaurantJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        viewButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        changeButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationText = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        queueText = new javax.swing.JTextArea();
        Enqueue = new javax.swing.JButton();
        Dequeue = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        viewButton.setText("View Reservations");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        addButton.setText("Add Reservation");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        changeButton.setText("Change Reservation");
        changeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove Reservation");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        reservationText.setColumns(20);
        reservationText.setRows(5);
        jScrollPane1.setViewportView(reservationText);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeButton)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(addButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(changeButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(viewButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(viewButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(changeButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton)))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reservations", jPanel2);

        queueText.setColumns(20);
        queueText.setRows(5);
        jScrollPane2.setViewportView(queueText);

        Enqueue.setText("Enqueue");
        Enqueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnqueueActionPerformed(evt);
            }
        });

        Dequeue.setText("Seat");
        Dequeue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DequeueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Enqueue, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Dequeue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Enqueue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Dequeue)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                        .addGap(67, 67, 67))))
        );

        jTabbedPane1.addTab("Walk-ins", jPanel3);

        jLabel1.setBackground(new java.awt.Color(204, 0, 51));
        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Luigi's Restaurant");

        jLabel2.setBackground(new java.awt.Color(204, 0, 51));
        jLabel2.setFont(new java.awt.Font("Showcard Gothic", 0, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 102));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Luigi's Restaurant");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addGap(217, 217, 217)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        addReservation();
    }//GEN-LAST:event_addButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        displayReservation();
    }//GEN-LAST:event_viewButtonActionPerformed

    private void changeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeButtonActionPerformed
        // TODO add your handling code here:
        changeReservation();
    }//GEN-LAST:event_changeButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        removeReservation();
    }//GEN-LAST:event_removeButtonActionPerformed

    private void EnqueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnqueueActionPerformed
        // TODO add your handling code here:
        enqueue();
    }//GEN-LAST:event_EnqueueActionPerformed

    private void DequeueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DequeueActionPerformed
        // TODO add your handling code here:
        dequeue();
    }//GEN-LAST:event_DequeueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestaurantJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestaurantJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestaurantJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestaurantJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestaurantJFrame().setVisible(true);
            }
        });
    }
    
    
    public void displayQueue()
    {
        queueText.setText("Queue Total: " + qList.size());
        if(qList.isEmpty() == false)
        {
            for (int i = 0; i < qList.size(); i++)
            {
                queueText.append("\n#" + (i+1) + ":  " + qList.get(i).rName);
            }
        }
        else
        {
            queueText.setText("Queue is empty!");
        }
    }
    
    public void enqueue()
    {
        JPanel panel = new JPanel();
        panel.add(new JLabel("Name:"));
        
        JTextField nameField = new JTextField(20);
        panel.add(nameField);
        
        Object[] options = {"Enqueue", "Cancel"};
        int n = JOptionPane.showOptionDialog(null, panel, "Queue",
                                             JOptionPane.YES_NO_OPTION,
                                             JOptionPane.QUESTION_MESSAGE,
                                             null, options, options[0]);
        if (n == JOptionPane.YES_OPTION)
        {
            String inputName = nameField.getText();
            
            queue.makeNewReservation(new ReservationInfo(inputName, null));
            displayQueue();
        }    
    }
    
    public void dequeue()
    {
        if(qList.size() <= 0)
        {
            queueText.setText("Queue is empty!");
        }
        else
        {
            qList.removeIndex(0);
            displayQueue();
        }
        
    }
    
    public void displayReservation()
    {
        reservationText.setText("Reservations Total: " + rList.size());
        if(rList.isEmpty() == false)
        {
            for (int i = 0; i < rList.size(); i++)
            {
                reservationText.append("\n#" + (i+1) + ":  " +
                                       rList.get(i).rTime + "  " +
                                       rList.get(i).rName);
            }
        }
        else
        {
            reservationText.setText("List is empty!");
        }
    }
    
    public void addReservation()
    {
        JPanel panel = new JPanel();
        
        panel.add(new JLabel("Name:"));
        JTextField nameField = new JTextField(20);
        panel.add(nameField);
        
        panel.add(new JLabel("Time [hh:mm] (continous):"));
        JComboBox hours = new javax.swing.JComboBox();
        JComboBox minutes = new javax.swing.JComboBox();
        
        hours.setModel(new javax.swing.DefaultComboBoxModel(new String[]
        { "12", "13", "14", "15","16","17","18","19","20","21","22","23"}));
        
        minutes.setModel(new javax.swing.DefaultComboBoxModel(new String[]
        {"00","15","30","45"}));
        
        panel.add(hours);
        panel.add(minutes);
        
        Object[] options = {"Add", "Cancel"};
        int n = JOptionPane.showOptionDialog(null, panel, "Reservation",
                                             JOptionPane.YES_NO_OPTION,
                                             JOptionPane.QUESTION_MESSAGE,
                                             null, options, options[0]);
        if (n == JOptionPane.YES_OPTION)
        {
            String inputName = nameField.getText();
            String inputTime = hours.getSelectedItem().toString() + ":" +
                               minutes.getSelectedItem().toString();
            
            iterator.makeNewReservation(new ReservationInfo(inputName, inputTime));
            displayReservation();
        }
    }
    
    public void changeReservation()
    {
        displayReservation();
        if(rList.isEmpty() == false) //if list is populated
        {
            JComboBox digit1 = new javax.swing.JComboBox();
            
            JPanel panel = new JPanel();
            
            panel.add(new JLabel("Index of reservation to be changed:"));
            digit1.setModel(new javax.swing.DefaultComboBoxModel(new String[]
            { "0", "1", "2", "3", "4","5","6","7","8","9", "10", "11", "12",
              "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23",
              "24", "25", "26", "27", "28", "29", "30" }));
            
            panel.add(digit1);
            
            
            Object[] options = {"Change", "Cancel"};
            int n = JOptionPane.showOptionDialog(null, panel, "Reservation",
                                                 JOptionPane.YES_NO_OPTION,
                                                 JOptionPane.QUESTION_MESSAGE,
                                                 null, options, options[0]);
            if (n == JOptionPane.YES_OPTION)
            {
                int removalIndex;
                String inputTime = digit1.getSelectedItem().toString();
                removalIndex = Integer.parseInt(inputTime);
                rList.removeIndex(removalIndex);
                addReservation();
            }
        }
        else
        {}
    }
    
    public void removeReservation()
    {
        displayReservation();
        if(rList.isEmpty() == false) //if list is populated
        {
            JComboBox digit1 = new javax.swing.JComboBox();
            
            JPanel panel = new JPanel();
            
            panel.add(new JLabel("Index of reservation to be removed:"));
            digit1.setModel(new javax.swing.DefaultComboBoxModel(new String[]
            { "0", "1", "2", "3", "4","5","6","7","8","9", "10", "11", "12",
              "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23",
              "24", "25", "26", "27", "28", "29", "30" }));
            
            panel.add(digit1);
            
            
            Object[] options = {"Remove", "Cancel"};
            int n = JOptionPane.showOptionDialog(null, panel, "Reservation",
                                                 JOptionPane.YES_NO_OPTION,
                                                 JOptionPane.QUESTION_MESSAGE,
                                                 null, options, options[0]);
            if (n == JOptionPane.YES_OPTION)
            {
                int removalIndex;
                String inputTime = digit1.getSelectedItem().toString();
                removalIndex = Integer.parseInt(inputTime);
                rList.removeIndex(removalIndex);
                displayReservation();
            }
        }
        else
        {}
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Dequeue;
    private javax.swing.JButton Enqueue;
    private javax.swing.JButton addButton;
    private javax.swing.JButton changeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea queueText;
    private javax.swing.JButton removeButton;
    private javax.swing.JTextArea reservationText;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
